<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAG
        DwAAAk1TRnQBSQFMAgEBBAEAASgBAAEoAQABGQEAARkBAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABZAMAATIDAAEBAQABCAUAAYgBExgAAYACAAGAAwACgAEAAYADAAGAAQABgAEAAoACAAPAAQABwAHc
        AcABAAHwAcoBpgEAATMFAAEzAQABMwEAATMBAAIzAgADFgEAAxwBAAMiAQADKQEAA1UBAANNAQADQgEA
        AzkBAAGAAXwB/wEAAlAB/wEAAZMBAAHWAQAB/wHsAcwBAAHGAdYB7wEAAdYC5wEAAZABqQGtAgAB/wEz
        AwABZgMAAZkDAAHMAgABMwMAAjMCAAEzAWYCAAEzAZkCAAEzAcwCAAEzAf8CAAFmAwABZgEzAgACZgIA
        AWYBmQIAAWYBzAIAAWYB/wIAAZkDAAGZATMCAAGZAWYCAAKZAgABmQHMAgABmQH/AgABzAMAAcwBMwIA
        AcwBZgIAAcwBmQIAAswCAAHMAf8CAAH/AWYCAAH/AZkCAAH/AcwBAAEzAf8CAAH/AQABMwEAATMBAAFm
        AQABMwEAAZkBAAEzAQABzAEAATMBAAH/AQAB/wEzAgADMwEAAjMBZgEAAjMBmQEAAjMBzAEAAjMB/wEA
        ATMBZgIAATMBZgEzAQABMwJmAQABMwFmAZkBAAEzAWYBzAEAATMBZgH/AQABMwGZAgABMwGZATMBAAEz
        AZkBZgEAATMCmQEAATMBmQHMAQABMwGZAf8BAAEzAcwCAAEzAcwBMwEAATMBzAFmAQABMwHMAZkBAAEz
        AswBAAEzAcwB/wEAATMB/wEzAQABMwH/AWYBAAEzAf8BmQEAATMB/wHMAQABMwL/AQABZgMAAWYBAAEz
        AQABZgEAAWYBAAFmAQABmQEAAWYBAAHMAQABZgEAAf8BAAFmATMCAAFmAjMBAAFmATMBZgEAAWYBMwGZ
        AQABZgEzAcwBAAFmATMB/wEAAmYCAAJmATMBAANmAQACZgGZAQACZgHMAQABZgGZAgABZgGZATMBAAFm
        AZkBZgEAAWYCmQEAAWYBmQHMAQABZgGZAf8BAAFmAcwCAAFmAcwBMwEAAWYBzAGZAQABZgLMAQABZgHM
        Af8BAAFmAf8CAAFmAf8BMwEAAWYB/wGZAQABZgH/AcwBAAHMAQAB/wEAAf8BAAHMAQACmQIAAZkBMwGZ
        AQABmQEAAZkBAAGZAQABzAEAAZkDAAGZAjMBAAGZAQABZgEAAZkBMwHMAQABmQEAAf8BAAGZAWYCAAGZ
        AWYBMwEAAZkBMwFmAQABmQFmAZkBAAGZAWYBzAEAAZkBMwH/AQACmQEzAQACmQFmAQADmQEAApkBzAEA
        ApkB/wEAAZkBzAIAAZkBzAEzAQABZgHMAWYBAAGZAcwBmQEAAZkCzAEAAZkBzAH/AQABmQH/AgABmQH/
        ATMBAAGZAcwBZgEAAZkB/wGZAQABmQH/AcwBAAGZAv8BAAHMAwABmQEAATMBAAHMAQABZgEAAcwBAAGZ
        AQABzAEAAcwBAAGZATMCAAHMAjMBAAHMATMBZgEAAcwBMwGZAQABzAEzAcwBAAHMATMB/wEAAcwBZgIA
        AcwBZgEzAQABmQJmAQABzAFmAZkBAAHMAWYBzAEAAZkBZgH/AQABzAGZAgABzAGZATMBAAHMAZkBZgEA
        AcwCmQEAAcwBmQHMAQABzAGZAf8BAALMAgACzAEzAQACzAFmAQACzAGZAQADzAEAAswB/wEAAcwB/wIA
        AcwB/wEzAQABmQH/AWYBAAHMAf8BmQEAAcwB/wHMAQABzAL/AQABzAEAATMBAAH/AQABZgEAAf8BAAGZ
        AQABzAEzAgAB/wIzAQAB/wEzAWYBAAH/ATMBmQEAAf8BMwHMAQAB/wEzAf8BAAH/AWYCAAH/AWYBMwEA
        AcwCZgEAAf8BZgGZAQAB/wFmAcwBAAHMAWYB/wEAAf8BmQIAAf8BmQEzAQAB/wGZAWYBAAH/ApkBAAH/
        AZkBzAEAAf8BmQH/AQAB/wHMAgAB/wHMATMBAAH/AcwBZgEAAf8BzAGZAQAB/wLMAQAB/wHMAf8BAAL/
        ATMBAAHMAf8BZgEAAv8BmQEAAv8BzAEAAmYB/wEAAWYB/wFmAQABZgL/AQAB/wJmAQAB/wFmAf8BAAL/
        AWYBAAEhAQABpQEAA18BAAN3AQADhgEAA5YBAAPLAQADsgEAA9cBAAPdAQAD4wEAA+oBAAPxAQAD+AEA
        AfAB+wH/AQABpAKgAQADgAMAAf8CAAH/AwAC/wEAAf8DAAH/AQAB/wEAAv8CAAP//wD/AP8A/wD/AP8A
        /wD/AP8AzgAK/wHqAe8D8wr0Cv8E9CT/GfQH/wH2AvQB8wXyAfMI9Af/AfQBEgHzAvEB8AHxARkB8gHz
        AfQB8B//GfQH/wHzAfIBAAEZA+ABuwEHAfAB8gLzBfQG/wLzAbwBkwGOAuMBkwFvAQcB8AEHAQ4L/wT0
        Bf8C9An/BPQB8xT0Bv8BBwEZAeEBnQGzAZYCdgGQAp0B4QHiAfMB9AHzA/QG/wHzAZkB4wEXAeMBFwEW
        AeMCFwGTAb0B9Ar/AfQCBwG8AfAB8QHyAvMD9An/BfQB8wz0AfMG9Ab/Ac8BkQFxAZYBnQHBApgB4AGd
        AZYBkAGdAeIB/wT0Bf8B9AGTARcB4wIWArcBlAIWAeMBFwEHAfQB/wFtB/8B9AGSAe0B8gf0Cv8Z9AX/
        AfEClgGRAZ0BngOYAbsB4AGdAboBlgGdAfEE9AT/AfQBlAIXAhYFlAEWAeMBagHjAb0B9gn/AfAB7QEa
        AfQE/wH2C/8K9AHrAewBGgG9Ae0B6wn0BP8BwgGdAZYBnQGXAQABmAEIAhkBCAEAAbsBnQG/AZYBnQEA
        A/QE/wG9AUcBFwIWApQDFgKUARYCFwHjAfEJ/wH0AQcBmgEaAfMB9gL/FPQB8QFEAXoBmQF1AZkBdAEW
        ARMB8Af0A/8B6gHgAU8BdwGdAuABwAHxAv8BCAGYATkB4AG6AZcBcQG7A/QD/wHzAW8BRwHjARYBtwH0
        AfICFgGUAfMB9AEHARYCFwEHAfQJ/wHzARoBWQF9AfAC9AH2EvQB8AFvAZMBaQOOAYgBbwGOAW8B8Ab0
        A/8B4gGWAU8EnQHAAfEC/wGRAp0CugHAAU8BnQHzAvQD/wG8AhcB4wEWAfQB/wGSAb0BtwHzAZIB/wHz
        ARYCFwEWARsJ/wH0AZ8BOAFZAZkBvBT0AW0BkwFvAewBaQJvAe0BbgJvAeoBkgP0AfMB9AP/AcEBTwGX
        AboBwAOYAfEC/wHwAZcBwAGSAXgBnQFPAZYBGQL0A/8BlAFHARcB4wEWAb0C/wL2A/8BlAHjAhcBRwHw
        Cv8BGgFYATgBdAGSAfMS9AHrAY8CbwH/AZIBiAFpAe0B/wFoAY0BFwHrBPQB8wP/AcEBcQF3AZEBCAL0
        AfMD/wH2AfMC9AHAAZ0BnAFxARkC9AP/AZQBFwFNAuMBFgG9Af8BBwHvAf8B9gGUARcBFgIXAUcBtwr/
        ARsBmQF6AVkBUgEcAfID9AH/DfQBkwEXAUYBaQHvAf8C9wH/AZMCaAFpAe0F9AP/AcEBcQF3AZEBvAT/
        AfYC/wH2Av8BngF4AXcBkAEZAvQD/wGUARcC4wEWAeMBkwH2Ae8C/wHyAZMC4wEWARcBRwG3Cv8B9gEH
        AXkBegF+Ae0B7wHzEPQBbwFGAW8BFwFNAQcC/wGTAoIBaAGNAbYF9AP/AcEBlgGRAboBwQHzAfIBMQH0
        Av8B9AIxAfIB4AGdAXcBkAEZBf8BlAIXAhYBlAGSBP8B9AHyAxYB4wFHAb0B9gr/AfQBHAF4AX4BmQHt
        AQcQ9AFvAUYBTQF0AU0BkwL/Ae8BbgKOAUYBkwX0A/8BwQJ3AZ0BwAGYAcABngHxAv8BnQGYAZ4CwAGd
        AXcBwAHiBf8BGgEXAU0BFgGUAfMBBwL2ARsD/wEaAhYBTQF0ARoL/wH2AbwBcwGfAZoBmQHsAfEP9AGT
        AUwBFgFNAfcB/wIaAf8B7wFvAW4BjQGwBfQD/wHiAZEBdwHgBJgB8QL/AbwBmAF4AZgBAAGdAXcBlwFD
        Bf8B8wEWAU0BFgGUAfIB/wH2AbcBlAG9Av8BGwIWAU0BFgHzC/8B9AH/AQcB7QGfAeUBHAHtAfIO9AHt
        AU0BdAGUAfQBGgGUAZMB8AH/AbYBjgGxAe0F9AP/Ae8BmAGWAZcEmAEZAfYB9AEIA5gBngGXAZwBCAb/
        AfQBBwF0ARYBdQGUAr0CFgGUAb0B3gGUARYBdQFNAZkM/wL0AfIB9wEcAaABfgHrARwB8wL0Af8J9AHz
        AfIBSwHjAZoBlAG3Ab0EBwFuAWgG9AT/Aa4BnQHAApgBCAGYAQgB8AG8AcIBuwEyAZgCwAHgARkH/wEa
        AW8CFgF1ApQCtwGaApQDdQGUAfMD/wH0CP8D9AHxAfcBmQGaARwB7QG8DvQBGgFvAXQEvQEaAbwBjgFp
        AfAB/wX0Bf8BGQGeAZgBeAHvAcIBnwHCAwgBmAF4AeABmALzCP8BmgN1AbcBmgG9A5oClAF1AXQBGwH/
        AfYC/wHzB/8F9AG8AfcBmQEaAfcB7QEbDvQB8AFpARYBcwLzAe0BqwFuARoH9Ab/AbUBwAGeATgBwQEI
        AZ8BngF9AQgBOAGeAcEBuwH2Cf8B9gEaAZkBegG9AbcCmgG9AbcBlAF1AZkBvQH0Af8B9gH/AfQB8wf/
        BfQB8wEHAe8B8wEHAW4BtgHzDvQB8gHtAZMB4wGxAZMB7QGSCPQH/wEAARkBmAF4A54CeAGYAfAB9Ar/
        AZIBAAH2AfMBCAGZApQCtwGaAXUBvQHzAvYD/wLzBv8H9AHyAgcBkwFGAY4B8wH0AfMc9An/AQcC8QIZ
        AfAB8wEHEP8C9AHxARsBGgEbAfMB9AL/AfYD/wH0AvMG/wT0AvMC9AHxAe0BbgGIAbwB7x70Lv8B9APz
        Bf8J9AHzAQcBbwEHAfIB8wH0AfMa9AHzAfQu/wTzBf8B9ArzARsB8gfzGPQB8y7/BPMF/wrzAfQB7wH0
        B/MZ9C3/AfQE8wT/CvMD9AIHBvMZ9AFCAU0BPgcAAT4DAAEoAwABZAMAATIDAAEBAQABAQUAASABAxYA
        A///AP8A/wAkAAs=
</value>
  </data>
</root>